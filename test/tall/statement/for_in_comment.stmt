40 columns                              |
### Some of these look weird, but users rarely put comments in those places.
>>> Hanging line comment before declared variable.
for  (  // comment
int  x  in  list  )  {  body;  }
<<<
for ( // comment
int x in list) {
  body;
}
>>> Non-hanging line comment before declared variable.
for  (
// comment
int  x  in  list  )  {  body;  }
<<<
for (
// comment
int x in list) {
  body;
}
>>> Hanging line comment after declared variable.
for  (  int  x  // comment
in  list  )  {  body;  }
<<<
for (int x // comment
    in list) {
  body;
}
>>> Non-hanging line comment after declared variable.
for  (  int  x
// comment
in  list  )  {  body;  }
<<<
for (int x
    // comment
    in list) {
  body;
}
>>> Hanging line comment before existing variable.
for  (  // comment
x  in  list  )  {  body;  }
<<<
for ( // comment
x in list) {
  body;
}
>>> Non-hanging line comment before existing variable.
for  (
// comment
x  in  list  )  {  body;  }
<<<
for (
// comment
x in list) {
  body;
}
>>> Hanging line comment after existing variable.
for  (  x  // comment
in  list  )  {  body;  }
<<<
for (x // comment
    in list) {
  body;
}
>>> Non-hanging line comment after existing variable.
for  (  x
// comment
in  list  )  {  body;  }
<<<
for (x
    // comment
    in list) {
  body;
}
>>> Hanging line comment before pattern variable.
for  (  // comment
var  [x]  in  list  )  {  body;  }
<<<
for ( // comment
var [x] in list) {
  body;
}
>>> Non-hanging line comment before pattern variable.
for  (
// comment
var  [x]  in  list  )  {  body;  }
<<<
for (
// comment
var [x] in list) {
  body;
}
>>> Hanging line comment after pattern variable.
for  (  var  [x]  // comment
in  list  )  {  body;  }
<<<
for (var [x] // comment
    in list) {
  body;
}
>>> Non-hanging line comment after pattern variable.
for  (  var  [x]
// comment
in  list  )  {  body;  }
<<<
for (var [x]
    // comment
    in list) {
  body;
}
>>> Hanging line comment after `in`.
for  (  int  x  in  // comment
list  )  {  body;  }
<<<
for (int x
    in // comment
    list) {
  body;
}
>>> Non-hanging line comment after `in`.
for  (  int  x  in
// comment
list  )  {  body;  }
<<<
for (int x
    in
    // comment
    list) {
  body;
}
>>> Hanging line comment after sequence.
for  (  int  x  in  list  // comment
)  {  body;  }
<<<
for (int x
    in list // comment
    ) {
  body;
}
>>> Non-hanging line comment after sequence.
for  (  int  x  in  list
// comment
)  {  body;  }
<<<
for (int x in list
// comment
) {
  body;
}