>>> (indent 2)
  final character =
      await repository.fetchCharacter(id, cancelToken: cancelToken);
<<<
  final character = await repository.fetchCharacter(
    id,
    cancelToken: cancelToken,
  );
>>> (indent 6)
      final charactersResponse =
          await repository.fetchCharacters(
            offset: meta.page * kCharactersPageLimit,
            limit: kCharactersPageLimit,
            nameStartsWith: meta.name,
            cancelToken: cancelToken,
          );
<<<
      final charactersResponse = await repository.fetchCharacters(
        offset: meta.page * kCharactersPageLimit,
        limit: kCharactersPageLimit,
        nameStartsWith: meta.name,
        cancelToken: cancelToken,
      );
>>> (indent 4)
    final response =
        await _get('characters', queryParameters: <String, Object?>{
          'offset': offset,
          if (limit != null) 'limit': limit,
          if (cleanNameFilter != null && cleanNameFilter.isNotEmpty)
            'nameStartsWith': cleanNameFilter,
        }, cancelToken: cancelToken);
<<<
    final response = await _get(
      'characters',
      queryParameters: <String, Object?>{
        'offset': offset,
        if (limit != null) 'limit': limit,
        if (cleanNameFilter != null && cleanNameFilter.isNotEmpty)
          'nameStartsWith': cleanNameFilter,
      },
      cancelToken: cancelToken,
    );