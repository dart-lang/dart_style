>>> Incorrect cost calculation when merging subtrees led to wrong solution.
SomeVeryLongReturnType
someFunctionName(SomeType_parameter1 AnotherType_parameter2) {
  {
    deps.then(() {
          ;
        })
        .then(________traverseDeps_depender__deps_);
  }
}
<<<
SomeVeryLongReturnType someFunctionName(
  SomeType_parameter1 AnotherType_parameter2,
) {
  {
    deps
        .then(() {
          ;
        })
        .then(________traverseDeps_depender__deps_);
  }
}
>>> Split in long type parameter clause.
abstract class StreamNotifierProviderBase<
  NotifierT extends AsyncNotifierBase<T>,
  T
> extends ProviderWithNotifier<AsyncValue<T>, NotifierT>
    with FutureModifier<T> {
  // ...
}
<<<
abstract class StreamNotifierProviderBase<
  NotifierT extends AsyncNotifierBase<T>,
  T
>
    extends ProviderWithNotifier<AsyncValue<T>, NotifierT>
    with FutureModifier<T> {
  // ...
}