>>> Incorrect cost calculation when merging subtrees led to wrong solution.
SomeVeryLongReturnType
someFunctionName(SomeType_parameter1 AnotherType_parameter2) {
  {
    deps.then(() {
          ;
        })
        .then(________traverseDeps_depender__deps_);
  }
}
<<<
SomeVeryLongReturnType someFunctionName(
  SomeType_parameter1 AnotherType_parameter2,
) {
  {
    deps
        .then(() {
          ;
        })
        .then(________traverseDeps_depender__deps_);
  }
}
>>> Function expression body in expression body member.
ItemRenderer<Project> get projectRenderer => (HasUIDisplayName item) =>
  item.uiDisplayName;
<<<
ItemRenderer<Project> get projectRenderer =>
    (HasUIDisplayName item) => item.uiDisplayName;
>>> Call chain body after long member header.
Future<String> executeShellCommand(String command) async =>
    _api.executeShellCommand(command);
<<<
Future<String> executeShellCommand(String command) async => _api
    .executeShellCommand(command);
>>> Split in long type parameter clause.
abstract class StreamNotifierProviderBase<
  NotifierT extends AsyncNotifierBase<T>,
  T
> extends ProviderWithNotifier<AsyncValue<T>, NotifierT>
    with FutureModifier<T> {
  // ...
}
<<<
abstract class StreamNotifierProviderBase<
  NotifierT extends AsyncNotifierBase<T>,
  T
>
    extends ProviderWithNotifier<AsyncValue<T>, NotifierT>
    with FutureModifier<T> {
  // ...
}
