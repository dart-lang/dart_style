40 columns                              |
>>> before first operand of logic
if (obj case // c
pattern || otherPattern) {;}
<<<
if (obj
    case // c
        pattern || otherPattern) {
  ;
}
>>> before first operand of nested logic
if (obj case pattern || // c
otherPattern && thirdLongPattern) {;}
<<<
if (obj
    case pattern || // c
        otherPattern &&
            thirdLongPattern) {
  ;
}
>>> after left logic operand (looks weird, but user should move comment)
if (obj case pattern // c
|| otherPattern) {;}
<<<
if (obj
    case pattern // c
        ||
        otherPattern) {
  ;
}
>>> after logic operator
if (obj case pattern || // c
otherPattern) {;}
<<<
if (obj
    case pattern || // c
        otherPattern) {
  ;
}
>>> after right logic operand
if (obj case somePattern || otherPattern // c
) {;}
<<<
if (obj
    case somePattern ||
        otherPattern // c
    ) {
  ;
}
>>> after relational operator
if (obj case <= // c
someConstant + anotherLongConstant) {;}
<<<
if (obj
    case <= // c
        someConstant +
            anotherLongConstant) {
  ;
}
>>> after relational operand
if (obj case <= someConstant + anotherLongConstant // c
) {;}
<<<
if (obj
    case <= someConstant +
        anotherLongConstant // c
    ) {
  ;
}
>>> before "as"
if (obj case constant // c
as Type) {;}
<<<
if (obj
    case constant // c
        as Type) {
  ;
}
>>> after "as"
if (obj case constant as // c
Type) {;}
<<<
if (obj
    case constant as // c
        Type) {
  ;
}
>>> before null-check (looks weird, but user should move comment)
if (obj case pattern // c
?) {;}
<<<
if (obj
    case pattern // c
        ?) {
  ;
}
>>> after null-check (looks weird, but user should move comment)
if (obj case pattern? // c
) {;}
<<<
if (obj case pattern? // c
    ) {
  ;
}
>>> before null-assert (looks weird, but user should move comment)
if (obj case pattern // c
!) {;}
<<<
if (obj
    case pattern // c
        !) {
  ;
}
>>> after null-assert (looks weird, but user should move comment)
if (obj case pattern! // c
) {;}
<<<
if (obj case pattern! // c
    ) {
  ;
}
>>> inside parenthesized
if (obj case ( // c
pattern)) {;}
<<<
if (obj
    case ( // c
        pattern)) {
  ;
}
>>> in qualified name
if (obj case qualified // c
.name) {;}
<<<
if (obj
    case qualified // c
        .name) {
  ;
}
>>> in prefixed qualified name
if (obj case qualified // c
.prefixed // c
.name) {;}
<<<
if (obj
    case qualified // c
        .prefixed // c
        .name) {
  ;
}
>>> before "var"
if (obj case // c
var x) {;}
<<<
if (obj
    case // c
        var x) {
  ;
}
>>> after "var"
if (obj case var // c
x) {;}
<<<
if (obj
    case var // c
        x) {
  ;
}
>>> after variable (looks weird, but user should move comment)
if (obj case var x // c
) {;}
<<<
if (obj case var x // c
    ) {
  ;
}
>>> after type
if (obj case List<int> // c
x) {;}
<<<
if (obj
    case List<int> // c
        x) {
  ;
}